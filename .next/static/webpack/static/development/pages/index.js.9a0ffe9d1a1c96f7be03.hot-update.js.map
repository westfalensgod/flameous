{"version":3,"file":"static/webpack/static/development/pages/index.js.9a0ffe9d1a1c96f7be03.hot-update.js","sources":["webpack:///./components/Question.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Row, Typography, Radio, Input, Alert } from \"antd\";\nconst { Title, Paragraph, Text } = Typography;\n\nfunction Question({ question, answers }) {\n  const [isAnswered, setAnswered] = React.useState(false);\n  const [isCorrect, setCorrect] = React.useState(false);\n  const [comment, setComment] = React.useState(\"\");\n\n  const handleAnswer = e => {\n    const { value } = e.target;\n    setAnswered(true);\n    const answer = answers.find(answer => answer.id === value);\n    const isAnswerCorrect = answer.isCorrect;\n    const answerComment = answer.comment;\n\n    setCorrect(isAnswerCorrect);\n    setComment(answerComment);\n  };\n\n  // const shuffle = array => {\n  //   return array.sort(() => Math.random() - 0.5);\n  // };\n\n  const radioStyle = {\n    display: \"block\",\n    height: \"30px\",\n    lineHeight: \"30px\"\n  };\n\n  // const answersArr = shuffle(answers);\n\n  return (\n    <Wrapper>\n      <Title level={2}>{question}</Title>\n      <Radio.Group onChange={handleAnswer}>\n        {answers.map(element => {\n          return (\n            <Radio key={element.id} style={radioStyle} value={element.id}>\n              {element.answer}\n            </Radio>\n          );\n        })}\n      </Radio.Group>\n      <Row>\n        {isAnswered && isCorrect ? (\n          <Alert message={comment} type='success' showIcon />\n        ) : (\n          <Alert message={comment} type='error' showIcon />\n        )}\n      </Row>\n    </Wrapper>\n  );\n}\n\nexport default Question;\n\nconst Wrapper = styled.div`\n  margin: 24px 0;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;;;;A","sourceRoot":""}