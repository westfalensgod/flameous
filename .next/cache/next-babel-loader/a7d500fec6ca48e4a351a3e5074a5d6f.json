{"ast":null,"code":"var _jsxFileName = \"/Users/westfalsky/Projects/frontend/flameous/components/Question.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { Typography, Radio, Input } from \"antd\";\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\n\nfunction Question({\n  question,\n  answers\n}) {\n  const [isAnswered, setAnswered] = React.useState(false);\n  const [isCorrect, setCorrect] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleAnswer = e => {\n    const {\n      value\n    } = e.target;\n    setAnswered(true);\n    const answer = answers.find(answer => answer.id === value);\n    const isAnswerCorrect = answer.isCorrect;\n    const answerComment = answer.comment;\n    setCorrect(isAnswerCorrect);\n    setComment(answerComment);\n  };\n\n  const shuffle = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const radioStyle = {\n    display: \"block\",\n    height: \"30px\",\n    lineHeight: \"30px\"\n  };\n  const answersArr = shuffle(answers);\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, question), __jsx(Radio.Group, {\n    onChange: handleAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, answersArr.map(element => {\n    return __jsx(Radio, {\n      key: element.id,\n      style: radioStyle,\n      value: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, element.answer);\n  })), isAnswered && isCorrect && comment);\n}\n\nexport default Question;\nconst Wrapper = styled.div`\n  margin: 24px 0;\n`;","map":{"version":3,"sources":["/Users/westfalsky/Projects/frontend/flameous/components/Question.js"],"names":["styled","Typography","Radio","Input","Title","Paragraph","Text","Question","question","answers","isAnswered","setAnswered","React","useState","isCorrect","setCorrect","comment","setComment","handleAnswer","e","value","target","answer","find","id","isAnswerCorrect","answerComment","shuffle","array","sort","Math","random","radioStyle","display","height","lineHeight","answersArr","map","element","Wrapper","div"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,QAAyC,MAAzC;AACA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,IAA6BL,UAAnC;;AAEA,SAASM,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,EAAyC;AACvC,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BH,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,UAAMW,MAAM,GAAGb,OAAO,CAACc,IAAR,CAAaD,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcJ,KAArC,CAAf;AACA,UAAMK,eAAe,GAAGH,MAAM,CAACR,SAA/B;AACA,UAAMY,aAAa,GAAGJ,MAAM,CAACN,OAA7B;AACAD,IAAAA,UAAU,CAACU,eAAD,CAAV;AACAR,IAAAA,UAAU,CAACS,aAAD,CAAV;AACD,GARD;;AAUA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,WAAOA,KAAK,CAACC,IAAN,CAAW,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjC,CAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,OAAO,EAAE,OADQ;AAEjBC,IAAAA,MAAM,EAAE,MAFS;AAGjBC,IAAAA,UAAU,EAAE;AAHK,GAAnB;AAMA,QAAMC,UAAU,GAAGT,OAAO,CAAClB,OAAD,CAA1B;AAEA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,QAAlB,CADF,EAEE,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,QAAQ,EAAEU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,UAAU,CAACC,GAAX,CAAeC,OAAO,IAAI;AACzB,WACE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAO,CAACd,EAApB;AAAwB,MAAA,KAAK,EAAEQ,UAA/B;AAA2C,MAAA,KAAK,EAAEM,OAAO,CAACd,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,OAAO,CAAChB,MADX,CADF;AAKD,GANA,CADH,CAFF,EAWGZ,UAAU,IAAKI,SAAS,IAAIE,OAX/B,CADF;AAeD;;AAED,eAAeT,QAAf;AAEA,MAAMgC,OAAO,GAAGvC,MAAM,CAACwC,GAAI;;CAA3B","sourcesContent":["import styled from \"styled-components\";\nimport { Typography, Radio, Input } from \"antd\";\nconst { Title, Paragraph, Text } = Typography;\n\nfunction Question({ question, answers }) {\n  const [isAnswered, setAnswered] = React.useState(false);\n  const [isCorrect, setCorrect] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n\n  const handleAnswer = (e) => {\n    const { value } = e.target;\n    setAnswered(true);\n    const answer = answers.find(answer => answer.id === value);\n    const isAnswerCorrect = answer.isCorrect;\n    const answerComment = answer.comment;\n    setCorrect(isAnswerCorrect);\n    setComment(answerComment);\n  };\n\n  const shuffle = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const radioStyle = {\n    display: \"block\",\n    height: \"30px\",\n    lineHeight: \"30px\"\n  };\n\n  const answersArr = shuffle(answers);\n\n  return (\n    <Wrapper>\n      <Title level={2}>{question}</Title>\n      <Radio.Group onChange={handleAnswer}>\n        {answersArr.map(element => {\n          return (\n            <Radio key={element.id} style={radioStyle} value={element.id}>\n              {element.answer}\n            </Radio>\n          );\n        })}\n      </Radio.Group>\n      {isAnswered && (isCorrect && comment)}\n    </Wrapper>\n  );\n}\n\nexport default Question;\n\nconst Wrapper = styled.div`\n  margin: 24px 0;\n`;\n"]},"metadata":{},"sourceType":"module"}